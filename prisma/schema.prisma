generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  name     String?
  hauls    Haul[]
  workdays Workday[]
}

model Driver {
  id                Int       @id @default(autoincrement())
  firstName         String
  lastName          String
  defaultTruck      String?
  endDumpPayRate    Float
  flatBedPayRate    Float
  nonCommissionRate Float
  dateHired         DateTime? @db.Date
  dateReleased      DateTime? @db.Date
  isActive          Boolean   @default(true)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @default(now())
  workdays          Workday[]
}

model Vendor {
  id                  Int              @id @default(autoincrement())
  name                String
  shortName           String
  chtFuelSurcharge    Float
  vendorFuelSurcharge Float
  isActive            Boolean          @default(true)
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @default(now())
  vendorLocations     VendorLocation[]
  vendorProducts      VendorProduct[]
}

model VendorProduct {
  id               Int            @id @default(autoincrement())
  name             String
  productCost      Float
  notes            String
  isActive         Boolean        @default(true)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @default(now())
  vendorId         Int
  vendorLocationId Int
  hauls            Haul[]
  vendor           Vendor         @relation(fields: [vendorId], references: [id])
  vendorLocation   VendorLocation @relation(fields: [vendorLocationId], references: [id])
}

model VendorLocation {
  id             Int             @id @default(autoincrement())
  name           String
  isActive       Boolean         @default(true)
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @default(now())
  vendorId       Int
  freightRoutes  FreightRoute[]
  vendor         Vendor          @relation(fields: [vendorId], references: [id])
  vendorProducts VendorProduct[]
}

model MaterialCategory {
  id        Int        @id @default(autoincrement())
  name      String
  isActive  Boolean    @default(true)
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
  materials Material[]
}

model Material {
  id          Int              @id @default(autoincrement())
  name        String
  stock       String
  image       String?
  bin         String?
  size        String?
  description String?
  notes       String?
  isFeatured  Boolean          @default(false)
  isTruckable Boolean          @default(false)
  isActive    Boolean          @default(true)
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @default(now())
  categoryId  Int
  category    MaterialCategory @relation(fields: [categoryId], references: [id])
}

model Workday {
  id            Int      @id @default(autoincrement())
  date          DateTime
  chHours       Float
  ncHours       Float
  ncReasons     String?
  notes         String?
  offDuty       Boolean  @default(false)
  offDutyReason String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @default(now())
  driverId      Int
  createdById   Int
  hauls         Haul[]
  createdBy     User     @relation(fields: [createdById], references: [id])
  driver        Driver   @relation(fields: [driverId], references: [id])

  @@unique([driverId, date])
}

model Haul {
  id              Int           @id @default(autoincrement())
  dateHaul        DateTime
  truck           String
  customer        String
  chInvoice       String?
  loadType        String
  loadRefNum      String?
  vendorProductId Int
  freightRouteId  Int
  rateMetric      String
  rate            Float
  quantity        Float
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @default(now())
  workdayId       Int
  createdById     Int
  createdBy       User          @relation(fields: [createdById], references: [id])
  freightRoute    FreightRoute  @relation(fields: [freightRouteId], references: [id])
  vendorProduct   VendorProduct @relation(fields: [vendorProductId], references: [id])
  workday         Workday       @relation(fields: [workdayId], references: [id])
}

model FreightRoute {
  id               Int            @id @default(autoincrement())
  destination      String
  freightCost      Float
  notes            String?
  isActive         Boolean        @default(true)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @default(now())
  vendorLocationId Int
  vendorLocation   VendorLocation @relation(fields: [vendorLocationId], references: [id])
  hauls            Haul[]
}

model WaitlistEntry {
  id          Int       @id @default(autoincrement())
  firstName   String
  lastName    String
  phone       String
  email       String?
  resource    String
  quantity    String?
  status      String    @default("waiting")
  contactedAt DateTime?
  notes       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @default(now())
}
